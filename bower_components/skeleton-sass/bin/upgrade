#!/bin/sh

echo "Upgrade utility working...\n"
cwd=${PWD##*/}

if [[ $cwd = "bin" ]]; then
	cd ../
fi

echo "Disclaimer: this utility it meant to aid in upgrading from Skeleton Sass 1.x to Skeleton Sass 2.x. If you have followed the wiki articles then please do not use this script without a clean installation of Skeleton Sass 2.x. We, AtomicPages LLC, are not responsible for any unforeseen events that arise by using this script. Please follow the prompts.\n"

echo "Did you add the contents from _vars.scss in Skeleton Sass 1.x to _MYconfig.scss in Skeleton Sass 2.x? [y/n]"
echo "Note: If you ran the setup utility, your global configuration name might differ"
read ans

	if [[ ($ans != "y") && ($ans != "Y") && ($ans != "YES") && ($ans != "yes") ]]; then
		echo "Please copy the variables from _vars.scss and run the script again"
		exit 0
	fi

echo "Converting variable names..."

config=$(ls | grep config)
echo "Using ${config}"

if [[ ! $config =~ config\.(scss)$ ]]; then
	echo "Global config file in root not found. Please execute bin/upgrade within the skeleton-sass directory. Current working directory is\n`pwd`" 1>&2
	exit 1
fi

declare -a keys
declare -a values

# Keys need a value pair.
keys=("backgroundColor" "fontSize" "fontFamily" "fontColor" "formFont" "linkColor" "linkHoverColor" "linkDecoration" "headingFamily" "headingColor" "baseWidth" "baseColWidth" "baseGutterWidth" "isFluid" "baseColCount" "tabletWidth" "mobilePortraitWidth" "mobileLandscapeWidth")

values=("background-color" "font-size" "font-family" "font-color" "form-font" "link-color" "link-hover" "link-decoration" "heading-family" "heading-color" "base-width" "base-col-width" "base-gutter-width" "is-fluid" "base-col-count" "tablet-width" "mobile-portrait-width" "mobile-landscape-width")

# Both the keys and values should be the same length
length=${#keys[@]}

for (( i=0; i<${length}; i++ )); do
	sed -i '' "s/${keys[i]}/${values[i]}/g" $config
done

echo "Launch Setup Utility now? [y/n]"
read ans

if [[ ($ans != "n") && ($ans != "N") && ($ans != "no") && ($ans != "No") && ($ans != "NO") ]]; then
	bin/setup.rb
	echo "Upgrade and Setup is complete!"
	exit 0
fi

echo "Upgrade is complete! Rename _MYconfig.scss to a different name if you haven't done so already and import that file into core/_config.scss. You may also run bin/setup.sh from command line to automate this task."
exit 0
